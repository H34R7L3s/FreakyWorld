plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // Add this line for the Shadow plugin

}

group = 'H34R7L3s'
version = '2.1.0-BetaSNAPSHOT'


repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://cursemaven.com' }
    maven { url "https://repo.dmulloy2.net/repository/public/" }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url "https://repo.oraxen.com/releases"
    }
}

dependencies {
    compileOnly("io.th0rgal:oraxen:1.183.0")
    compileOnly "io.papermc.paper:paper-api:1.21.1-R0.1-SNAPSHOT"
    implementation group: 'net.dv8tion', name: 'JDA', version: '5.0.0-beta.17'
    implementation 'org.yaml:snakeyaml:2.2'
    // Fügen Sie die Abhängigkeit zum SQLite-JDBC-Treiber hinzu
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.36.0.3'
    //implementation ("curse.maven:lodestone-616457:4636991")
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0";
    implementation 'com.zaxxer:HikariCP:5.0.1'


}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
shadowJar {
    archiveClassifier.set('')
    configurations = [project.configurations.runtimeClasspath]
    // This ensures that all non-compileOnly dependencies are included
}


build.dependsOn shadowJar
